<?xml version="1.0" encoding="utf-8" ?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">x86</Platform>
    <StartAction>Program</StartAction>

    <RootDir>$(MSBuildThisFileDirectory)..\</RootDir>
    <PublicPath>$(MSBuildThisFileDirectory)..\..\</PublicPath>
    <MSBuildCommunityTasksPath>$(PublicPath)common\src\.build</MSBuildCommunityTasksPath>
    <VVVVPath>$(MSBuildThisFileDirectory)..\</VVVVPath>
    <VVVVExe>$(VVVVPath)vvvv.exe</VVVVExe>
    
    <StartProgram>$(VVVVExe)</StartProgram>
    <BuildingInsideVisualStudio Condition=" '$(BuildingInsideVisualStudio)' == '' ">false</BuildingInsideVisualStudio>
    <PrivatePath>$(PublicPath)..\</PrivatePath>
  </PropertyGroup>

  <!-- These settings get used when in our public repository -->
  <PropertyGroup Condition="!Exists('$(PrivatePath).git\')">
    <InPrivateRepo>false</InPrivateRepo>
    <PackageRepositories></PackageRepositories>
    <StartArguments></StartArguments>
  </PropertyGroup>

  <!-- These settings get used when in our private repository -->
  <PropertyGroup Condition="Exists('$(PrivatePath).git\')">
    <InPrivateRepo>true</InPrivateRepo>
    <PackageRepositories>$(PrivatePath)vvvv50;$(PrivatePath)public-vl</PackageRepositories>
    <StartArguments>/package-repositories "$(PackageRepositories)"</StartArguments>
  </PropertyGroup>
  
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' " />
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' " />
  <PropertyGroup Condition=" '$(Configuration)' == 'Deploy' " />
  <PropertyGroup Condition=" '$(Platform)' == 'AnyCPU' " />
  <PropertyGroup Condition=" '$(Platform)' == 'x86' " />
  <PropertyGroup Condition=" '$(Platform)' == 'x64' " />

  <PropertyGroup>
    <VVVV_BuildDependsOn>VVVV_Build</VVVV_BuildDependsOn>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Deploy' ">
    <VVVV_BuildDependsOn>$(VVVV_BuildDependsOn);VVVV_Deploy</VVVV_BuildDependsOn>
  </PropertyGroup>
  
  <!-- Deploy -->
  <PropertyGroup>
    <!-- Override these -->
    <DeployBaseDir>$(MSBuildThisFileDirectory)..\..\build\</DeployBaseDir>
    <!-- Leave the deploy directory empty and the task will use the deploy base directory in combination with the deploy prefix, version info and platform -->
    <DeployDir/>
    <!-- Used for choosing a deploy directory name (if not set) and the zip file name -->
    <DeployPrefix>vvvv_beta</DeployPrefix>
    <!-- The files to copy to the deploy directory -->
    <DeployInclude />
    <!-- The files to not copy to the deploy directory -->
    <DeployExclude />
    <DeployReadOnlyFiles />
    <DeployHiddenFiles />
    <DeployGenerateNodeList>true</DeployGenerateNodeList>
    <DeploySignFiles>true</DeploySignFiles>
  </PropertyGroup>

  <!-- Zip -->
  <!-- We used the Zip task from this project. Because of http://msbuildtasks.tigris.org/issues/show_bug.cgi?id=148 we switched to cmd line call to 7-Zip. -->
  <!--<Import Project="$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets"/>-->
  <PropertyGroup>
    <SevenZip>$(ProgramFiles)\7-Zip\7z.exe</SevenZip>
  </PropertyGroup>
</Project>
